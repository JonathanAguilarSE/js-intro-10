1. COmmonJS Modules
module.exports and require()

2. ES6 Modules
export and import

HOW TO RUN JS CODE?
- NodeJS
- Browser
- Extensions (you'll never use this in th ework environment)

static methods and properties can be accessed with the class name while non-staticcan be accessed with an object of the class
class A{
    static propertyA = 'Hi';
    propertyB = 'Hello';

    static funcA(){
        console.log(' I am static');
    }

    funcB(){
        console.log('I am NOT static')
    }
}

// Accessing static properties and methods
Apple.propertyA; // 'Hi'
Apple.funcA(); // I am static

const a1 = new Apple();

a1.funcB()' I am NOT static
a1.propertyB; // Hello


If the method executes the same task for every single object of the class, it makes sense to use methods with static keyword.


class Batch10Student{
    constructor(fullname, age){
        this.fullname = fullname;
        this.age = age;
    }
    static getProgramName(){
        return 'SDET';
    }

    getFullname(){
        return this.fullname;
    }

    getAge(){
        return this.age;
    }
}

const bermet = new Batch10Student('Bermet S', 20);
const alina = ne Batch10Student('Alina', 21);

ber,et.getFullname();

Batch10Student.getProgrammeName();


class AppleStore{
    constructor(id, city, state, zip){
        this.id = id;
        this.city = city;
        tis.state = state;
        this.zip = zip;
    }

    static getIphone16ProMaxPrice(){

    }
}



HTML - HyperText Markup Language
It is not a programming language because you cannot create functions with it.



Web Application: any app you visit on browsers
Mobile Applications: any application you download from AppStore or GooglePlay
Hybrid Application: you can on web and also install on your mobile devices

Desktop Application: Robot Framework (Python)

Web Application: consists of many web pages
Each web page is created using HTML
Each web page is created using web elements

Ech web pagge is represnted by an HTML tag
<p></p>
<img/>
<div></div>

<button>Apply Now</button>

Opening tag: <button>
Closing tag: </button>
Opening and closing tag / self closing tag: <img/>


Tags may have many properties/attributes. All th eproperties are added as key-value pairs in the openning tags
<tagNme attr1="value1" attri2="value2">VISIBLE TEXT</tagName>