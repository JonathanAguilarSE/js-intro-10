const variables cannot be reassigned; but their value especially in case of reference types can be changed

const names = [];



ADDING & REMOVING ELEMENTS FROM ARRAYS
push() method
TASK: adds one or more elements to the end of the array
RETURN: returns the new length of the array after adding elements
ARGUMENTS: takes one or or more elements as arguments
CHANGE ORIGINAL VALUE: Yes
STATIC / NON-STATIC: non-static (can be called with any variable)

pop() method
TASK: removes the last element from the array
RETURN: returns the removed element
    NOTE: returns undefined if the array is empty
ARGUMENTS: no args
CHANGE ORIGINAL VALUE: yes
STATIC / NON-STATIC: non-static

unshift() method
TASK: adds one or more elements to the start of the array
RETURN: returns the new length of the array after adding elements
ARGUMENTS: takes one or more elements ar args
CHANGE ORIGINAL VALUE: yes
STATIC / NON-STATIC: non-static

shift() method
TASK: 
RETURN:
ARGUMENTS:
CHANGE ORIGINAL VALUE:
STATIC / NON-STATIC:



Array.isArray()
TASK: checks if a variable is an array
RETURN: returns a boolean. True if the vraibale is actually an array or false otherwise
ARGUMENTS: takes a variable to check if it is array or not
CHANGE ORIGINAL VALUE: no
STATIC / NON-STATIC: static



at() method
TASK: retrieves element at specified index
RETURN: returns the found element or undefined if no element found at the specified index
ARGUMENTS: takes an indexas argument
CHANGE ORIGINAL VALUE: no
STATIC / NON-STATIC: non-static



includes()
TASK: checks if the array includes the specified element
RETURN: returns a boolean - true if the array contains the specified element or false otherwise
ARGUMENTS: it takes an element to check if array contains it or not
CHANGE ORIGINAL VALUE: no
STATIC / NON-STATIC: non-static

indexOf()
TASK: checks the array if it contains the specified element
RETURN: returns the index of the found first match or -1 if the element does not exist in the array
ARGUMENTS: it takes an element to check if array contains it or not
CHANGE ORIGINAL VALUE: no
STATIC / NON-STATIC: non-static

lastIndexOf()
TASK: checks the array if it contains the specified element
RETURN: returns the index of the found last match or -1 if the element does not exist in the array
ARGUMENTS: it takes an element to check if array contains it or not
CHANGE ORIGINAL VALUE: no
STATIC / NON-STATIC: non-static



concat() method
TASK: combines one array with another or multiple other arrays
RETURN: returns a new array which is the combination os multiple arrays
ARGUMENTS: takes one or more array arguments
CHANGE ORIGINAL VALUE: no
STATIC / NON-STATIC: non-static

Spread Operator: this is a new feature to JS iwith ES6 release and useful to concatenate arrays by soreading array elements into another array

SYNTAX:
...arrVariable


reverse() method
TASK: reverses the array
RETURN: returns the same array reversed
ARGUMENTS: no args
CHANGE ORIGINAL VALUE: yes
STATIC / NON-STATIC: non-static



slice() method
TASK: extracts the partial array from the original array
RETURN: returns a new array
ARGUMENTS: takes one or two indexes as args
CHANGE ORIGINAL VALUE: no
STATIC / NON-STATIC: non-static


splice() method
TASK: used to add or remove elements anywhere within the array
RETURN: returns the removed elements as an array
ARGUMENTS: 2 or more args
    1st arg is the starting postition-index
    2nd arg is the number of leements you want to remove including the start position-index
    3rd... are the new elements to be added after the start position-index
CHANGE ORIGINAL VALUE: yes
STATIC / NON-STATIC: non-static

TASK: 
RETURN: 
ARGUMENTS: 
CHANGE ORIGINAL VALUE: 
STATIC / NON-STATIC: 